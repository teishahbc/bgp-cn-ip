# .github/workflows/update_cn_ips.yml
name: Update CN ASN IP Lists

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    # Runs daily at 05:00 UTC. Adjust as needed.
    # Be mindful of bgp.tools' note about caching (don't run too frequently)
    - cron: '0 5 * * *'

jobs:
  update-list:
    runs-on: ubuntu-latest
    permissions:
      # Required to push changes back to the repo
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Use a recent Python 3 version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run IP filter script
        run: python filter_ips.py # Assumes script is in the repo root

      - name: Commit and push if changes exist
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Add BOTH potential output files
          # Use || true to prevent failure if a file doesn't exist (e.g., fetch failed for one set)
          git add cn_as4134_as56040_ipv4.txt || true
          git add cn_other_asns_ipv4.txt || true

          # Check if there are changes staged
          # If 'git diff --staged --quiet' exits 0, there are no staged changes.
          if git diff --staged --quiet; then
            echo "No changes detected in generated IP lists."
            exit 0 # Exit successfully, no commit/push needed
          fi

          # If we reach here, there are staged changes
          echo "Changes detected. Committing..."
          # Updated commit message to reflect multiple lists
          git commit -m "Automated update of CN ASN IP lists ($(date -u +'%Y-%m-%d'))"

          echo "Pushing changes..."
          git push

        env:
          # This token is automatically provided by GitHub Actions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
